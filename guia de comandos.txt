git init → criar repositório local 

git add → nome do arquivo para peparar pra subir apenas o arquivo em si 

git add . → prepara todos pra subir 

git status → verifica se tem mudanças pra serem commitadas 

git commit -m "nome do commit" → cria o commit no repositório local 

git push origin main → manda pra branch princial 

git push origin 'nome da branch' →  manda pra branch especifica 

git branch -M 'main' → usado pra renomear a branch caso seja 'master'

git add remote add origin "link do repositório" → liga ao repositório local

git remote set-url origin "link do repositório" → se já estava ligado a
um repositório mas precisa que ele aponte para um repositório diferente.

git remote remove origin → remove a ligação com o repositório

git push -u origin main → envia os commits pro github -u só precisa ser feito na 1ª vez

git push origin main → envia os commits pro github 

git pull →  pega as atualizações do repositorio remoto

git checkout -b 'nome da nova branch' → cria e já vai pra nova branch 
 
git checkout main → muda pra branch pricipal 

git merge "nome da branch que você quer que as alterações vá para a principal" → junta as
modificações para a principal

resolvendo conflito merge no seu editor (o VS Code é excelente para isso).
Você verá marcações especiais que mostram as diferentes versões do código:
<<<<<<< HEAD (Sua versão atual)
======= (Separador)
>>>>>>> (A versão da branch que você está mesclando)

git clone 'link do repositorio' → vc cria uma pasta onde será o seu repositório, abre o bach do 
git dentro da pasta criada e usa o comando

cd 'nome do diretório' → vai pra pasta que vc nomeou 

cd .. → volta um diretório 

 git push --force origin main # Envia suas alterações para a branch 'main' 
 e sobrescreve qualquer coisa que já estava lá, não é muito recomendado!


 obrigada :)


